#+title: Tomcat_configuration
#+date: 2023-04-04T20:09:13+08:00
#+draft: false
#+tags[]: java jsp

* Installation
#+begin_src shell
sudo pacman -S tomcat10
#+end_src
* Configuration
follow [[https://wiki.archlinux.org/title/tomcat#Initial_configuration][archwiki]]
* Run
use =/usr/share/tomcat/bin/{startup.sh,shutdown.sh,..}= to start and stop tomcat
* Web Application
This is my web application project structure.
#+begin_src plain
.
├── lib
├── Makefile
├── src
│   └── ie
│       └── ucd
│           └── comp2013J
│               ├── Department.java
│               ├── EmployeeDAO.java
│               ├── Employee.java
│               ├── JDBCTool.java
│               ├── UserDAO.java
│               └── User.java
├── target
│   └── ie
│       └── ucd
│           └── comp2013J
│               ├── Department.class
│               ├── Employee.class
│               ├── EmployeeDAO.class
│               ├── JDBCTool.class
│               ├── User.class
│               └── UserDAO.class
└── WebContent
    ├── css
    │   └── loginstyle.css
    ├── employeeList.jsp
    ├── example.jsp
    ├── footer.html
    ├── index.jsp
    ├── login.jsp
    ├── META-INF
    │   └── MANIFEST.MF
    ├── updateEmployee.jsp
    └── WEB-INF
        ├── classes
        │   └── ie
        │       └── ucd
        │           └── comp2013J
        │               ├── Department.class
        │               ├── Employee.class
        │               ├── EmployeeDAO.class
        │               ├── JDBCTool.class
        │               ├── User.class
        │               └── UserDAO.class
        └── lib
            └── mysql-connector-java-8.0.15.jar
#+end_src
You should move the compiled classes(with directories) in =target= folder to =WEB-INF/class= folder
Here is a sample Makefile:
#+begin_src makefile
web-ref: build # web-refresh
mkdir -p ./WebContent/WEB-INF/classes
rm -rf ./WebContent/WEB-INF/classes/*
cp -r $(BUILD_DIR)/* ./WebContent/WEB-INF/classes/
sudo rm -rf /var/lib/tomcat10/webapps/pokemon-gallery/
sudo cp -r ./WebContent/ /var/lib/tomcat10/webapps/pokemon-gallery/

web-start:
sudo /usr/share/tomcat10/bin/startup.sh

web-stop:
sudo /usr/share/tomcat10/bin/shutdown.sh

web-open:
xdg-open "http://localhost:8080/pokemon-gallery/"

web-open-manager:
xdg-open "http://localhost:8080/manager/html"
#+end_src
* Run your project
** Add your project to tomcat application paths, there are three measures to achieve this:
1. through tomcat web interface [[http://localhost:8080/manager/html]]
   In =Deploy= -> =Deploy directory or WAR file located on server= section, you should fill the blanks of =Context Path= and =WAR or Directory path=, which are the relative path of URL and the actual project web content path respectively.
2. use configuration file: follow [[https://wiki.archlinux.org/title/tomcat#Hosting_files_outside_the_webapps_folder][/etc/tomcatn/Catalina/localhost/whatShouldFollowLocalhost.xml - ArchWiki]]
3. (Recommend: suitable for refresh) copy your web application folder under the tomcat's default =webapp= folder `/var/lib/tomcat10/webapps`
   the name under =webapp= folder is the relative URL path for your application.
   as shown in the =Makefile=:
   #+begin_src 
	 sudo rm -rf /var/lib/tomcat10/webapps/pokemon-gallery/
	 sudo cp -r ./WebContent/ /var/lib/tomcat10/webapps/pokemon-gallery/
   #+end_src
   It's even better to execute command =sudo chmod -R 777 /var/lib/tomcat10/webapps= before, so you can remove the =sudo= prefix in the above commands (not in production environment).
   

