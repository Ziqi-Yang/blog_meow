<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programmes on Meow</title><link>https://ziqi-yang.github.io/blog_meow/programme/</link><description>Recent content in Programmes on Meow</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Feb 2023 22:35:19 +0800</lastBuildDate><atom:link href="https://ziqi-yang.github.io/blog_meow/programme/index.xml" rel="self" type="application/rss+xml"/><item><title>rCore</title><link>https://ziqi-yang.github.io/blog_meow/programme/rcore/</link><pubDate>Mon, 20 Feb 2023 22:35:19 +0800</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/rcore/</guid><description> Useful Command To show platforms based on riscv that rustc supports 1 rustc --print target-list | grep riscv Rust Note use #![no_std] to not use std, so we can build a program which doesn&amp;#39;t require std. use #![no_main] to make compiler don&amp;#39;t do initialization work Toolings strace cargo-binutils</description></item><item><title>Hugo Syntax Highlighting for Org</title><link>https://ziqi-yang.github.io/blog_meow/programme/hugo_syntax_highlighting_for_org/</link><pubDate>Sun, 19 Feb 2023 09:02:17 +0800</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/hugo_syntax_highlighting_for_org/</guid><description>Code are stolen from ruippeixotog/quicksort
Inline =hl_lines= ~hl_lines~ 1 src_org{third} hugo exports this type of inline code block into actual code block :( Src Block Maybe hugo doesn&amp;#39;t support hl_lines property to highlight certain lines in a src block in org.
However, you can use hugo shortcodes to achieve this.
Example Traditionally adding property 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // #+begin_src rust :hl_lines 8 use std::io; use std::io::BufRead; fn quicksort(v: &amp;amp;mut [i32]) { if !</description></item><item><title>Firefox Disable Ctrl-w</title><link>https://ziqi-yang.github.io/blog_meow/programme/firefox-disable-ctrl-w/</link><pubDate>Mon, 16 Jan 2023 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/firefox-disable-ctrl-w/</guid><description>As a vim key mapping user, I found firefox ctrl-w close tab is really a annoying key shortcut. Since in vim, the key shortcut ctrl-w is defaultly mapped as deleting a word.
Solution Create /usr/lib/firefox/defaults/pref/autoconfig.js
1 2 3 pref(&amp;#34;general.config.filename&amp;#34;, &amp;#34;firefox.cfg&amp;#34;); // our configuration file is called firefox.cfg at the roor directory of firefox lib pref(&amp;#34;general.config.obscure_value&amp;#34;, 0); pref(&amp;#34;general.config.sandbox_enabled&amp;#34;, false); // after testing, it is needed to disable sanbox Create /usr/lib/firefox/firefox.cfg</description></item><item><title>AUR Contribution Guide</title><link>https://ziqi-yang.github.io/blog_meow/programme/aur_contribution_guide/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/aur_contribution_guide/</guid><description> Category:Package development - ArchWiki Notes on creating packages for the Arch User Repository (AUR)</description></item><item><title>Hide Secrets in Your Dot Files on Public Repository</title><link>https://ziqi-yang.github.io/blog_meow/programme/hide-secrets-in-your-dotfile/</link><pubDate>Mon, 09 Jan 2023 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/hide-secrets-in-your-dotfile/</guid><description>I am using dotdrop to manage my dot files. If you don&amp;#39;t use it, it&amp;#39;s fine, but you may need to do a some extra work to make things done. For those who manually copy and paste their dot files, I highly recommend you to try it out. It can automate your copy-paste flow, and it is highly customizable. It can save you a lot of time dealing with chores.</description></item><item><title>Read Baby Git Source Code</title><link>https://ziqi-yang.github.io/blog_meow/programme/read_baby_git_source_code/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/read_baby_git_source_code/</guid><description>I find a well-commented git source code(based on Linus Torvalds first commit version) on the Internet, which is named baby-git by the modifier. It should be a nice footboard for those people who want to contribute to the actual git project(including me ԅ(≖‿≖ԅ)).
The baby-git project URL: https://bitbucket.org/jacobstopak/baby-git/src/master/. However, in my last visit to the website, the page is blank, but you can still clone the repository via the following command:</description></item><item><title>Risc-V Learning Summary</title><link>https://ziqi-yang.github.io/blog_meow/programme/risc-v-learning-summary/</link><pubDate>Wed, 04 Jan 2023 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/risc-v-learning-summary/</guid><description>Enjoying and Hating assembly.
Recently, I self-learned the cs61c(su20) class, which requires you to write a risc-v program to make a simple neural network in the project 2. It could be annoying that you write some bug in the assembly since the debug condition is frustrating. After all, through the project I learned a lot about risc-v, especially the calling conventions(at the beginning I haven&amp;#39;t paid much attention to it, and it had really caused a lot of problems to my work).</description></item><item><title>Switch to Wayland</title><link>https://ziqi-yang.github.io/blog_meow/programme/switch_to_wayland/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/switch_to_wayland/</guid><description>Switch to Wayland
Installation I choose hyprland as my Wayland window manager(and compositor) which is based on wlroots, it is a really new compositor with a lot of great features, and also it is pretty stable(according to the office). Here is the stars over time charts for it:
Hyprland Stars Over Time 1 2 3 4 5 6 7 # glfw-wayland is conflict with glfw-x11 paru -S hyprland-git xorg-xwayland xorg-xlsclients qt5-wayland glfw-wayland qt6-wayland paru -S dunst wireplumber pipewire polkit-kde-agent xdg-desktop-portal-hyprland-git # must-have (from hyprland-wiki) paru -S wev # xev paru -S wl-clipboard # xclip paru -S wtype # xdotool applications 1 2 3 4 5 6 paru -S hyprpaper # wallpaper manager under hyprland paru -S rofi-lbonn-wayland-git # rofi under Wayland paru -S waybar-hyprland-git # waybar hyprland (enhanced?</description></item><item><title>Emacs lsp-java Project Settings</title><link>https://ziqi-yang.github.io/blog_meow/programme/emacs-lsp-java-project-settings/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/emacs-lsp-java-project-settings/</guid><description>Update: 2023-2-25 use eglot instead(in the last of the article)
Create a java project with third libriaries support
lsp-java is an awesome package for lsp-mode to open a java project. However, after some testing, I found it has difficulty in importing third party libraries with pure java project(not use maven, Gradle). Moreover, it only has a limited ability to interact with a Gradle project. However, it has great support for maven project, which means we can use maven to import third party java libraries.</description></item><item><title>If Else In Sed</title><link>https://ziqi-yang.github.io/blog_meow/programme/if-else-in-sed/</link><pubDate>Wed, 21 Dec 2022 00:00:00 +0000</pubDate><guid>https://ziqi-yang.github.io/blog_meow/programme/if-else-in-sed/</guid><description> If-else statement in linux command sed
use t or T to control the sed workflow.(more)
1 2 sed -i &amp;#34;s/animations = true/animations = false/;t;\ s/animations = false/animations = true/&amp;#34; &amp;#34;$picom_config&amp;#34; Reference How to toggle a comment in a line using sed Sed/Branching-and-flow-control</description></item></channel></rss>